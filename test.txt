public abstract class A{public I<Ė.ĭ>B;public string C,D;public Ė.ė E;public Ė.ě F;public Ė.TargetData G=new Ė.TargetData(){Ħ=Vector3D.Forward,};public Ė.ğ H=Ė.ğ.Ġ;}public abstract class I<J>{public readonly IMyIntergridCommunicationSystem K;public IMyBroadcastListener L=null;long M=1;Dictionary<long,e>N;public const string O="req",P="resp";public struct Request{public J Q;public long R;public long S;public object T;}public I(IMyIntergridCommunicationSystem U){K=U;}public abstract void V(Request W);private void X(){while(K.UnicastListener.HasPendingMessage){Y(K.UnicastListener.AcceptMessage());}while(L!=null&&L.HasPendingMessage){Y(L.AcceptMessage());}}private void Y(MyIGCMessage Z){switch(Z.Tag){case O:{if(!(Z.Data is MyTuple<J,long,object>)){ë.Ā($"Invalid request payload: {Z.Data.GetType()}");return;}var a=(MyTuple<J,long,object>)Z.Data;Request b=new Request(){Q=a.Item1,R=Z.Source,S=a.Item2,T=a.Item3,};V(b);}break;case P:{if(!(Z.Data is MyTuple<long,object>)){ë.Ā($"Invalid response payload: {Z.Data.GetType()}");return;}var c=(MyTuple<long,object>)Z.Data;e d;if(N.TryGetValue(c.Item1,out d)){d.i=c.Item2;d.j=Z.Source;}}break;}}abstract class e:Ø<object>{protected double f=-1,g;protected long h;public object i=null;public long j=-1;protected I<J>k;public e(I<J>l,double m,long n){f=m;h=n;k=l;}public override void o(double p){g=p;base.o(p);}}class q:e{public q(I<J>r,double s,long t):base(r,s,t){}protected override IEnumerator<object>u(){while(i==null&&f!=-1&&(Û-g)>f){yield return null;}k.N.Remove(h);yield return i;}}class v:e{Func<long,object,bool>w;public v(I<J>x,double y,long z,Func<long,object,bool>À):base(x,y,z){w=À;}protected override IEnumerator<object>u(){while(f!=-1&&(Û-g)>f){if(i!=null){if(w.Invoke(j,i)){break;}i=null;}yield return null;}k.N.Remove(h);yield return null;}}public long Á<T>(long Â,J Ã,T Ä){long Å=M++;K.SendUnicastMessage(Â,O,MyTuple.Create(Ã,Å,Ä));return Å;}public long Æ<T>(string Ç,J È,T É){long Ê=M++;K.SendBroadcastMessage(Ç,MyTuple.Create(È,Ê,É));return Ê;}public void Ë<T>(Request Ì,T Í){K.SendUnicastMessage(Ì.R,P,MyTuple.Create(Ì.S,Í));}public Ø<object>Î(long Ï,Func<long,object,bool>Ð,double Ñ=-1){var Ò=new v(this,Ñ,Ï,Ð);N[Ï]=Ò;return Ò;}public Ø<object>Ó(long Ô,double Õ=-1){var Ö=new q(this,Õ,Ô);N[Ô]=Ö;return Ö;}}public struct Nil{public static readonly Nil×;}public abstract class Ø<T>{protected IEnumerator<T>Ù;protected T Ú;protected double Û;public T Value{get{if(InProgress)throw new Exception("process not complete");return Ú;}}public IEnumerator<T>Progress{get{return Ù;}set{if(Ù!=null){Ù.Dispose();}Ù=value;}}public bool InProgress{get{return Progress!=null;}}public virtual void o(double Ü){Û=Ü;Progress=u();}public virtual void Ý(){Progress=null;}protected abstract IEnumerator<T>u();public virtual bool Þ(double ß){Û=ß;if(Progress==null){return true;}bool à=Progress.MoveNext();if(à){return false;}else{Ú=Progress.Current;Progress=null;return true;}}}public abstract class á:Ø<Nil>{}public class â<T>:Ø<T>{Func<IEnumerator<T>>ã;Action ä;Action å;public â(Func<IEnumerator<T>>æ,Action ç=null,Action è=null){ã=æ;ä=ç;å=è;}public override void o(double é){if(ä!=null)ä();base.o(é);}public override void Ý(){if(å!=null)å();base.Ý();}protected override IEnumerator<T>u()=>ã();}public class ê:â<Nil>{public ê(Func<IEnumerator<Nil>>f,Action s=null,Action e=null):base(f,s,e){}}public static class ë{static IMyTextSurface ì;static int í=0;static Vector2 î;public static void ï(IMyTextSurface ð){ì=ð;ì.WriteText("",false);ì.BackgroundColor=Color.Black;ì.ContentType=ContentType.TEXT_AND_IMAGE;ì.Font="Monospace";ì.FontColor=Color.Lime;ì.FontSize=0.7F;ì.TextPadding=0F;var ñ=new StringBuilder();ñ.Append('A');var ò=ì.MeasureStringInPixels(ñ,"Monospace",ì.FontSize);î=(ì.SurfaceSize-ò)/ò;}public static void ó(string ô){Ă("[FTL]"+ô);throw new Exception(ô);}public static void õ(string ö)=>Ă("[ERR]"+ö);public static void Ā(string ā)=>Ă("[WRN]"+ā);public static void Ă(string ă){if(í>=î.Y){ì.WriteText("",false);í=0;}while(ă.Length>0){int Ą=Math.Min((int)î.X,ă.Length);ì.WriteText(ă.Substring(0,Ą),true);ă=ă.Substring(Ą);ì.WriteText("\n",true);í+=1;}}}public class ą{public IMyTextSurface Ć;public bool ć=true;readonly Vector2 Ĉ,ĉ;readonly StringBuilder Ċ=new StringBuilder();const string ċ="Monospace";int Č=0;public float FitLines{set{Ć.FontSize=FitLines/value;}get{return Ĉ.Y/ĉ.Y;}}public float FitCols{set{Ć.FontSize=FitCols/value;}get{return Ĉ.X/ĉ.X;}}public void č(float Ď,float ď){var Đ=FitLines/Ď;var đ=FitCols/ď;Ć.FontSize=Math.Min(Đ,đ);}public ą(IMyTextSurface Ē){Ċ.Append('A');Ć=Ē;Ć.Font=ċ;Ć.FontSize=1;Ć.TextPadding=0F;ĉ=Ć.MeasureStringInPixels(Ċ,ċ,1);}public void ē(string Ĕ){if(Č>=Ĉ.Y){Ć.WriteText("",false);Č=0;}do{int ĕ=Math.Min((int)Ĉ.X,Ĕ.Length);Ć.WriteText(Ĕ.Substring(0,ĕ),true);Ĕ=Ĕ.Substring(ĕ);Ć.WriteText("\n",true);Č+=1;}while(ć&&(Ĕ.Length>=0));}}public static class Ė{[Flags]public enum ė{Ę=0,ę=1,Ě=2,}[Flags]public enum ě{Ĝ=0,ĝ=1,Ğ=2,}public enum ğ{Ġ,ġ,Ģ,ģ,Ĥ,}public struct TargetData{public long ĥ;public Vector3D Ħ;public Nullable<Vector3D>ħ;public object Ĩ(){if(ħ.HasValue){return MyTuple.Create(ĥ,Ħ);}else{return MyTuple.Create(ĥ,Ħ,ħ.Value);}}public static Nullable<TargetData>ĩ(object o){var Ī=new TargetData();if(o is MyTuple<long,Vector3D>){var ī=(MyTuple<long,Vector3D>)o;Ī.ĥ=ī.Item1;Ī.Ħ=ī.Item2;}else if(o is MyTuple<long,Vector3D,Vector3D>){var Ĭ=(MyTuple<long,Vector3D,Vector3D>)o;Ī.ĥ=Ĭ.Item1;Ī.Ħ=Ĭ.Item2;Ī.ħ=Ĭ.Item3;}else{return null;}return Ī;}}public enum ĭ{Į,į,İ,ı,Ĳ,ĳ,Ĵ,ĵ,Ķ,ķ,ĸ,Ĺ,ĺ,}}